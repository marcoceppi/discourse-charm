#!/bin/bash

set -ex

chmod +x $CHARM_DIR

repository=`config-get repository`
release=`config-get release`

apt-get install -qy ruby1.9.3 git-core build-essential libxml2-dev \
  libxslt1-dev libpq-dev nginx redis-server postgresql-client-common \
  postgresql-client-9.1 sendmail libtcmalloc-minimal0 imagemagick

export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

juju-log "Bundler ho!"
gem install bundler

set +e
id discourse
user_exists=$?
set -e

if [ $user_exists -gt 0 ]; then
  juju-log "Create discourse user"
  adduser --disabled-password --gecos 'Discourse' discourse
fi

if [ -f "/etc/nginx/sites-enabled/default" ]; then
  rm -f /etc/nginx/sites-enabled/default
fi

if [ -d "/home/discourse/discourse" ]; then
  juju-log "Updating repository..."
  cd /home/discourse/discourse
  sudo -u discourse -H git fetch

  # Determine branch or tag currently assigned

  current_release=$(git describe)
  current_release_is_branch=""

  if [ `git symbolic-ref -q HEAD` ]; then
    current_release=$(git symbolic-ref -q HEAD)
    current_release=${current_release##refs/heads/}
    current_release_is_branch=true
  fi

  if [ "$current_release" != "$release" ] && [ ! -z "$release" ]; then
    juju-log "Placing $repository at $release"
    if [ $current_release_is_branch ]; then
      if git for-each-ref --format "%(refname:short)" refs/heads/ | grep -Eq "^$branch$"; then
        juju-log "We already have this branch branched. Delete it for a clean pull"
        sudo -u discourse -H git branch -D $release
      fi
      sudo -u discourse -H git checkout -b $release origin/$release
    else
      # This is a headless one-time checkout.
      sudo -u discourse -H git checkout $release
    fi

    touch $CHARM_DIR/.migrate
  else
    if [ $current_release_is_branch ]; then
      sudo -u discourse -H git pull
    fi
  fi

  rm -f .foreman
else
  juju-log "Fetching source from $repository..."
  sudo -u discourse -H git clone $repository /home/discourse/discourse
  cd /home/discourse/discourse

  if [ ! -z "$release" ]; then
    juju-log "Checkout out $release tag"
    git checkout $release
  else
    current_branch=$(git symbolic-ref -q HEAD)
    current_branch_name=${branch_name##refs/heads/}

    if [ "$current_branch_name" != "$branch" ]; then
      juju-log "Moving new repository to $branch"
      git checkout -b $branch origin/$branch
    fi
  fi

  sudo -u discourse -H cp config/redis.yml.sample config/redis.yml
  mkdir -p ../.backup
fi

if [ ! -f config/environments/production.rb ]; then
  cp config/environments/production.rb.sample config/environments/production.rb
fi

export RAILS_ENV="production"

juju-log "Bundle install"
sudo -u discourse -H bundle install --deployment

if [ -f $CHARM_DIR/.secret_token ]; then
  juju-log "Loading secret token"
  token=`cat $CHARM_DIR/.secret_token`
else
  juju-log "Creating secret token"
  token=`sudo -u discourse -H bundle exec rake secret`
  echo "$token" > $CHARM_DIR/.secret_token
fi

if [ -f "/etc/init/discoruse.conf" ]; then
  juju-log "Replacing old discourse upstart"
  rm -f /etc/init/discourse.conf
fi

. $CHARM_DIR/lib/file.bash

juju-log "Installing upstart script"
rails_env=`config-get env | sed -e "s/ /\nenv /g" -e "s/^/env /"`

ch_template_file 0644 root:root $CHARM_DIR/contrib/upstart/discourse.conf.tpl /etc/init/discourse.conf rails_env token
ch_template_file 0644 root:root $CHARM_DIR/contrib/upstart/discourse-sidekiq.conf.tpl /etc/init/discourse-sidekiq.conf rails_env token
ch_template_file 0644 root:root $CHARM_DIR/contrib/upstart/discourse-clockwork.conf.tpl /etc/init/discourse-clockwork.conf rails_env token
ch_template_file 0644 root:root $CHARM_DIR/contrib/upstart/discourse-webs.conf.tpl /etc/init/discourse-webs.conf rails_env token
ch_template_file 0644 root:root $CHARM_DIR/contrib/upstart/discourse-web.conf.tpl /etc/init/discourse-web.conf rails_env token

cd $CHARM_DIR

chown -R discourse.discourse /home/discourse/discourse
juju-log "Installed/Upgraded"
